name: CI/CD Pipeline with GitHub Container Registry

on:
  push:
    branches:
      - main

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
      # Vérifier le code du dépôt
      - name: Checkout code
        uses: actions/checkout@v2

      # Configurer Docker avec GHCR
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

      # Construire l'image Docker du backend (Go)
      - name: Build and push backend image
        run: |
          docker build -t ghcr.io/${{ secrets.GHCR_USERNAME }}/meta-model-backend:latest -f ./backend/Dockerfile ./backend
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/meta-model-backend:latest

  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Configurer Docker avec GHCR
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

      # Construire l'image Docker du frontend (React)
      - name: Build and push frontend image
        run: |
          docker build -t ghcr.io/${{ secrets.GHCR_USERNAME }}/meta-model-frontend:latest -f ./frontend/Dockerfile ./frontend
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/meta-model-frontend:latest

  build-database:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Configurer Docker avec GHCR
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

      # Construire l'image Docker de MongoDB avec init-phrases.js
      - name: Build and push MongoDB image
        run: |
          docker build -t ghcr.io/${{ secrets.GHCR_USERNAME }}/meta-model-mongodb:latest -f ./database/Dockerfile ./database
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/meta-model-mongodb:latest

  deploy-to-gke:
    needs: [build-backend, build-frontend, build-database]
    runs-on: ubuntu-latest

steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Authentifier Google Cloud avec la clé JSON du compte de service
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      # Configurer gcloud pour utiliser le projet Google Cloud et la zone
      - name: Set up Google Cloud configuration
        run: |
          gcloud config set project ${{ secrets.GKE_PROJECT_ID }}
          gcloud config set compute/zone ${{ secrets.GKE_ZONE }}

      # Obtenir les informations d'identification du cluster GKE
      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }}

      # Appliquer les fichiers Kubernetes pour déployer l'application
      - name: Deploy backend, frontend, MongoDB and services to GKE
        run: |
          kubectl apply -f kubernetes/backend-deployment.yaml
          kubectl apply -f kubernetes/frontend-deployment.yaml
          kubectl apply -f kubernetes/mongodb-deployment.yaml
          kubectl apply -f kubernetes/backend-service.yaml
          kubectl apply -f kubernetes/frontend-service.yaml
          kubectl apply -f kubernetes/mongodb-service.yaml
          kubectl apply -f kubernetes/mongodb-pvc.yaml
          kubectl apply -f kubernetes/ingress.yaml