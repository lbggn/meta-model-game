{"ast":null,"code":"var _jsxFileName = \"/Users/lborgogn/Documents/git/meta-model-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Importer le fichier CSS\n\n// Liste des catégories et sous-catégories\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst categories = {\n  \"Omission\": [\"Suppression simple\", \"Manque d'index référentiel\", \"Manque du comparatif\", \"Verbe non-spécifique\"],\n  \"Généralisation\": [\"Quantifieur universel\", \"Origine perdue\", \"Opérateurs modaux\", \"Nominalisation\"],\n  \"Distorsion\": [\"Lecture de pensée\", \"Cause-effet\", \"Équivalence complexe\", \"Présupposé\"]\n};\nfunction App() {\n  _s();\n  // États pour la partie jeu\n  const [phrase, setPhrase] = useState(null);\n  const [categoryGuess, setCategoryGuess] = useState('');\n  const [subCategoryGuess, setSubCategoryGuess] = useState('');\n  const [correct, setCorrect] = useState(null); // true, false, or null\n  const [loading, setLoading] = useState(true);\n\n  // États pour le filtrage de la catégorie\n  const [filterCategory, setFilterCategory] = useState('');\n\n  // États pour soumettre une nouvelle phrase\n  const [newText, setNewText] = useState('');\n  const [newCategory, setNewCategory] = useState('');\n  const [newSubCategory, setNewSubCategory] = useState('');\n  const [newQuestion, setNewQuestion] = useState('');\n\n  // État pour stocker toutes les phrases récupérées depuis MongoDB\n  const [allPhrases, setAllPhrases] = useState([]);\n\n  // État pour gérer l'onglet actif (jeu ou liste des phrases)\n  const [activeTab, setActiveTab] = useState('jeu');\n\n  // Charger toutes les phrases depuis MongoDB\n  const fetchAllPhrases = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/api/phrases');\n      setAllPhrases(response.data);\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération de toutes les phrases :\", error);\n    }\n  };\n\n  // Charger une phrase aléatoire ou filtrée pour la partie jeu\n  const fetchFilteredPhraseForGame = async () => {\n    try {\n      setLoading(true);\n      const params = {};\n      if (filterCategory) params.category = filterCategory;\n      const response = await axios.get('http://localhost:8000/api/phrase', {\n        params\n      });\n      setPhrase(response.data);\n      setLoading(false);\n      setCorrect(null); // Réinitialiser le feedback\n      setCategoryGuess('');\n      setSubCategoryGuess('');\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération de la phrase :\", error);\n      setLoading(false);\n    }\n  };\n\n  // Vérifier si la catégorie et sous-catégorie devinées sont correctes\n  const checkAnswer = () => {\n    if (phrase) {\n      const isCorrectCategory = phrase.category === categoryGuess;\n      const isCorrectSubCategory = phrase.subCategory === subCategoryGuess;\n      setCorrect(isCorrectCategory && isCorrectSubCategory);\n    }\n  };\n\n  // Soumettre une nouvelle phrase\n  const submitNewPhrase = async () => {\n    try {\n      const newPhrase = {\n        text: newText,\n        category: newCategory,\n        subCategory: newSubCategory,\n        question: newQuestion\n      };\n      await axios.post('http://localhost:8000/api/phrase', newPhrase);\n      alert('Phrase ajoutée avec succès !');\n      setNewText('');\n      setNewCategory('');\n      setNewSubCategory('');\n      setNewQuestion('');\n      fetchAllPhrases(); // Recharger les phrases après l'ajout\n    } catch (error) {\n      console.error(\"Erreur lors de l'ajout de la phrase :\", error);\n    }\n  };\n\n  // Charger une nouvelle phrase au démarrage\n  useEffect(() => {\n    fetchFilteredPhraseForGame(); // Charger une phrase avec ou sans filtre\n    fetchAllPhrases(); // Charger toutes les phrases lors du démarrage\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Jeu du M\\xE9ta-mod\\xE8le\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'jeu' ? 'active' : ''}`,\n        onClick: () => setActiveTab('jeu'),\n        children: \"Jeu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'list' ? 'active' : ''}`,\n        onClick: () => setActiveTab('list'),\n        children: \"Liste des phrases\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), activeTab === 'jeu' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Filtrer par cat\\xE9gorie :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), Object.keys(categories).map(cat => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `filter-button ${filterCategory === cat ? 'selected' : ''}`,\n          onClick: () => {\n            setFilterCategory(filterCategory === cat ? '' : cat);\n          },\n          children: cat\n        }, cat, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-phrase-button\",\n        onClick: fetchFilteredPhraseForGame,\n        children: \"Nouvelle phrase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Chargement...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 23\n      }, this), !loading && phrase && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"phrase-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"phrase-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Phrase :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 42\n          }, this), \" \", phrase.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"S\\xE9lectionner la cat\\xE9gorie :\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: categoryGuess,\n            onChange: e => setCategoryGuess(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Choisir une cat\\xE9gorie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this), Object.keys(categories).map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat\n            }, cat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"S\\xE9lectionner la sous-cat\\xE9gorie :\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: subCategoryGuess,\n            onChange: e => setSubCategoryGuess(e.target.value),\n            disabled: !categoryGuess // Désactiver si la catégorie n'est pas sélectionnée\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Choisir une sous-cat\\xE9gorie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this), categoryGuess && categories[categoryGuess].map(subCat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: subCat,\n              children: subCat\n            }, subCat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"check-button\",\n          onClick: checkAnswer,\n          children: \"V\\xE9rifier la r\\xE9ponse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this), correct === true && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"correct\",\n          children: \"Correct ! \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Question associ\\xE9e :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 18\n          }, this), \" \", phrase.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }, this), correct === false && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"incorrect\",\n          children: \"Incorrect \\uD83D\\uDE1E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"La bonne cat\\xE9gorie :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 18\n          }, this), \" \", phrase.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"La bonne sous-cat\\xE9gorie :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 18\n          }, this), \" \", phrase.subCategory]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Question \\xE0 poser :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 18\n          }, this), \" \", phrase.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section new-phrase-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Ajouter une nouvelle phrase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Texte de la phrase\",\n          value: newText,\n          onChange: e => setNewText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Cat\\xE9gorie :\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newCategory,\n            onChange: e => setNewCategory(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"S\\xE9lectionner une cat\\xE9gorie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), Object.keys(categories).map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat\n            }, cat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Sous-cat\\xE9gorie :\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newSubCategory,\n            onChange: e => setNewSubCategory(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"S\\xE9lectionner une sous-cat\\xE9gorie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), newCategory && categories[newCategory].map(subCat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: subCat,\n              children: subCat\n            }, subCat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Question :\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Exemple de question\",\n            value: newQuestion,\n            onChange: e => setNewQuestion(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          onClick: submitNewPhrase,\n          children: \"Ajouter la phrase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), activeTab === 'list' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section all-phrases-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Liste de toutes les phrases\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"phrase-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phrase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cat\\xE9gorie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sous-cat\\xE9gorie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: allPhrases.map((phrase, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: phrase.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: phrase.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: phrase.subCategory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: phrase.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OW9Orxn4bW8cwvXrvAurNddDC+Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","categories","App","_s","phrase","setPhrase","categoryGuess","setCategoryGuess","subCategoryGuess","setSubCategoryGuess","correct","setCorrect","loading","setLoading","filterCategory","setFilterCategory","newText","setNewText","newCategory","setNewCategory","newSubCategory","setNewSubCategory","newQuestion","setNewQuestion","allPhrases","setAllPhrases","activeTab","setActiveTab","fetchAllPhrases","response","get","data","error","console","fetchFilteredPhraseForGame","params","category","checkAnswer","isCorrectCategory","isCorrectSubCategory","subCategory","submitNewPhrase","newPhrase","text","question","post","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Object","keys","map","cat","value","onChange","e","target","disabled","subCat","type","placeholder","index","_c","$RefreshReg$"],"sources":["/Users/lborgogn/Documents/git/meta-model-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Importer le fichier CSS\n\n// Liste des catégories et sous-catégories\nconst categories = {\n  \"Omission\": [\n    \"Suppression simple\",\n    \"Manque d'index référentiel\",\n    \"Manque du comparatif\",\n    \"Verbe non-spécifique\"\n  ],\n  \"Généralisation\": [\n    \"Quantifieur universel\",\n    \"Origine perdue\",\n    \"Opérateurs modaux\",\n    \"Nominalisation\"\n  ],\n  \"Distorsion\": [\n    \"Lecture de pensée\",\n    \"Cause-effet\",\n    \"Équivalence complexe\",\n    \"Présupposé\"\n  ]\n};\n\nfunction App() {\n  // États pour la partie jeu\n  const [phrase, setPhrase] = useState(null);\n  const [categoryGuess, setCategoryGuess] = useState('');\n  const [subCategoryGuess, setSubCategoryGuess] = useState('');\n  const [correct, setCorrect] = useState(null); // true, false, or null\n  const [loading, setLoading] = useState(true);\n\n  // États pour le filtrage de la catégorie\n  const [filterCategory, setFilterCategory] = useState('');\n\n  // États pour soumettre une nouvelle phrase\n  const [newText, setNewText] = useState('');\n  const [newCategory, setNewCategory] = useState('');\n  const [newSubCategory, setNewSubCategory] = useState('');\n  const [newQuestion, setNewQuestion] = useState('');\n\n  // État pour stocker toutes les phrases récupérées depuis MongoDB\n  const [allPhrases, setAllPhrases] = useState([]);\n\n  // État pour gérer l'onglet actif (jeu ou liste des phrases)\n  const [activeTab, setActiveTab] = useState('jeu');\n\n  // Charger toutes les phrases depuis MongoDB\n  const fetchAllPhrases = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/api/phrases');\n      setAllPhrases(response.data);\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération de toutes les phrases :\", error);\n    }\n  };\n\n  // Charger une phrase aléatoire ou filtrée pour la partie jeu\n  const fetchFilteredPhraseForGame = async () => {\n    try {\n      setLoading(true);\n      const params = {};\n      if (filterCategory) params.category = filterCategory;\n\n      const response = await axios.get('http://localhost:8000/api/phrase', { params });\n      setPhrase(response.data);\n      setLoading(false);\n      setCorrect(null); // Réinitialiser le feedback\n      setCategoryGuess('');\n      setSubCategoryGuess('');\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération de la phrase :\", error);\n      setLoading(false);\n    }\n  };\n\n  // Vérifier si la catégorie et sous-catégorie devinées sont correctes\n  const checkAnswer = () => {\n    if (phrase) {\n      const isCorrectCategory = phrase.category === categoryGuess;\n      const isCorrectSubCategory = phrase.subCategory === subCategoryGuess;\n      setCorrect(isCorrectCategory && isCorrectSubCategory);\n    }\n  };\n\n  // Soumettre une nouvelle phrase\n  const submitNewPhrase = async () => {\n    try {\n      const newPhrase = {\n        text: newText,\n        category: newCategory,\n        subCategory: newSubCategory,\n        question: newQuestion\n      };\n      await axios.post('http://localhost:8000/api/phrase', newPhrase);\n      alert('Phrase ajoutée avec succès !');\n      setNewText('');\n      setNewCategory('');\n      setNewSubCategory('');\n      setNewQuestion('');\n      fetchAllPhrases();  // Recharger les phrases après l'ajout\n    } catch (error) {\n      console.error(\"Erreur lors de l'ajout de la phrase :\", error);\n    }\n  };\n\n  // Charger une nouvelle phrase au démarrage\n  useEffect(() => {\n    fetchFilteredPhraseForGame(); // Charger une phrase avec ou sans filtre\n    fetchAllPhrases();  // Charger toutes les phrases lors du démarrage\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      <h1>Jeu du Méta-modèle</h1>\n\n      {/* Navigation par onglet */}\n      <div className=\"tab-navigation\">\n        <button\n          className={`tab-button ${activeTab === 'jeu' ? 'active' : ''}`}\n          onClick={() => setActiveTab('jeu')}\n        >\n          Jeu\n        </button>\n        <button\n          className={`tab-button ${activeTab === 'list' ? 'active' : ''}`}\n          onClick={() => setActiveTab('list')}\n        >\n          Liste des phrases\n        </button>\n      </div>\n\n      {/* Affichage du contenu en fonction de l'onglet sélectionné */}\n      {activeTab === 'jeu' && (\n        <>\n          {/* Filtres pour le jeu */}\n          <div className=\"category-filters\">\n            <p>Filtrer par catégorie :</p>\n            {Object.keys(categories).map((cat) => (\n              <button\n                key={cat}\n                className={`filter-button ${filterCategory === cat ? 'selected' : ''}`}\n                onClick={() => {\n                  setFilterCategory(filterCategory === cat ? '' : cat);\n                }}\n              >\n                {cat}\n              </button>\n            ))}\n          </div>\n\n          {/* Bouton pour charger une nouvelle phrase */}\n          <button className=\"new-phrase-button\" onClick={fetchFilteredPhraseForGame}>\n            Nouvelle phrase\n          </button>\n\n          {/* Chargement de la phrase à deviner */}\n          {loading && <p>Chargement...</p>}\n          {!loading && phrase && (\n            <div className=\"phrase-container\">\n              <p className=\"phrase-text\"><strong>Phrase :</strong> {phrase.text}</p>\n\n              {/* Sélection de la catégorie */}\n              <label>\n                Sélectionner la catégorie :\n                <select value={categoryGuess} onChange={(e) => setCategoryGuess(e.target.value)}>\n                  <option value=\"\">Choisir une catégorie</option>\n                  {Object.keys(categories).map((cat) => (\n                    <option key={cat} value={cat}>{cat}</option>\n                  ))}\n                </select>\n              </label>\n              <br />\n\n              {/* Sélection de la sous-catégorie */}\n              <label>\n                Sélectionner la sous-catégorie : \n                <select\n                  value={subCategoryGuess}\n                  onChange={(e) => setSubCategoryGuess(e.target.value)}\n                  disabled={!categoryGuess} // Désactiver si la catégorie n'est pas sélectionnée\n                >\n                  <option value=\"\">Choisir une sous-catégorie</option>\n                  {categoryGuess &&\n                    categories[categoryGuess].map((subCat) => (\n                      <option key={subCat} value={subCat}>{subCat}</option>\n                    ))}\n                </select>\n              </label>\n              <br />\n\n              <button className=\"check-button\" onClick={checkAnswer}>Vérifier la réponse</button>\n            </div>\n          )}\n\n          {/* Affichage du résultat */}\n          {correct === true && (\n            <div className=\"result\">\n              <p className=\"correct\">Correct ! 🎉</p>\n              <p><strong>Question associée :</strong> {phrase.question}</p>\n            </div>\n          )}\n          {correct === false && (\n            <div className=\"result\">\n              <p className=\"incorrect\">Incorrect 😞</p>\n              <p><strong>La bonne catégorie :</strong> {phrase.category}</p>\n              <p><strong>La bonne sous-catégorie :</strong> {phrase.subCategory}</p>\n              <p><strong>Question à poser :</strong> {phrase.question}</p>\n            </div>\n          )}\n\n          {/* Section pour soumettre une nouvelle phrase */}\n          <div className=\"section new-phrase-section\">\n            <h2>Ajouter une nouvelle phrase</h2>\n            <input\n              type=\"text\"\n              placeholder=\"Texte de la phrase\"\n              value={newText}\n              onChange={(e) => setNewText(e.target.value)}\n            />\n            <br />\n            <label>\n              Catégorie :\n              <select value={newCategory} onChange={(e) => setNewCategory(e.target.value)}>\n                <option value=\"\">Sélectionner une catégorie</option>\n                {Object.keys(categories).map((cat) => (\n                  <option key={cat} value={cat}>{cat}</option>\n                ))}\n              </select>\n            </label>\n            <br />\n            <label>\n              Sous-catégorie :\n              <select value={newSubCategory} onChange={(e) => setNewSubCategory(e.target.value)}>\n                <option value=\"\">Sélectionner une sous-catégorie</option>\n                {newCategory &&\n                  categories[newCategory].map((subCat) => (\n                    <option key={subCat} value={subCat}>{subCat}</option>\n                  ))}\n              </select>\n            </label>\n            <br />\n            <label>\n              Question :\n              <input\n                type=\"text\"\n                placeholder=\"Exemple de question\"\n                value={newQuestion}\n                onChange={(e) => setNewQuestion(e.target.value)}\n              />\n            </label>\n            <br />\n            <button className=\"submit-button\" onClick={submitNewPhrase}>Ajouter la phrase</button>\n          </div>\n        </>\n      )}\n\n      {/* Afficher la liste des phrases sous forme de tableau */}\n      {activeTab === 'list' && (\n        <div className=\"section all-phrases-section\">\n          <h2>Liste de toutes les phrases</h2>\n          <table className=\"phrase-table\">\n            <thead>\n              <tr>\n                <th>Phrase</th>\n                <th>Catégorie</th>\n                <th>Sous-catégorie</th>\n                <th>Question</th>\n              </tr>\n            </thead>\n            <tbody>\n              {allPhrases.map((phrase, index) => (\n                <tr key={index}>\n                  <td>{phrase.text}</td>\n                  <td>{phrase.category}</td>\n                  <td>{phrase.subCategory}</td>\n                  <td>{phrase.question}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW,CAAC,CAAC;;AAEpB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,UAAU,GAAG;EACjB,UAAU,EAAE,CACV,oBAAoB,EACpB,4BAA4B,EAC5B,sBAAsB,EACtB,sBAAsB,CACvB;EACD,gBAAgB,EAAE,CAChB,uBAAuB,EACvB,gBAAgB,EAChB,mBAAmB,EACnB,gBAAgB,CACjB;EACD,YAAY,EAAE,CACZ,mBAAmB,EACnB,aAAa,EACb,sBAAsB,EACtB,YAAY;AAEhB,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACc,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC0B,cAAc,EAAEC,iBAAiB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC4B,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAM,CAAC8B,UAAU,EAAEC,aAAa,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAM,CAACgC,SAAS,EAAEC,YAAY,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMkC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMjC,KAAK,CAACkC,GAAG,CAAC,mCAAmC,CAAC;MACrEL,aAAa,CAACI,QAAQ,CAACE,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wDAAwD,EAAEA,KAAK,CAAC;IAChF;EACF,CAAC;;EAED;EACA,MAAME,0BAA0B,GAAG,MAAAA,CAAA,KAAY;IAC7C,IAAI;MACFrB,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMsB,MAAM,GAAG,CAAC,CAAC;MACjB,IAAIrB,cAAc,EAAEqB,MAAM,CAACC,QAAQ,GAAGtB,cAAc;MAEpD,MAAMe,QAAQ,GAAG,MAAMjC,KAAK,CAACkC,GAAG,CAAC,kCAAkC,EAAE;QAAEK;MAAO,CAAC,CAAC;MAChF9B,SAAS,CAACwB,QAAQ,CAACE,IAAI,CAAC;MACxBlB,UAAU,CAAC,KAAK,CAAC;MACjBF,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;MAClBJ,gBAAgB,CAAC,EAAE,CAAC;MACpBE,mBAAmB,CAAC,EAAE,CAAC;IACzB,CAAC,CAAC,OAAOuB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACrEnB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMwB,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIjC,MAAM,EAAE;MACV,MAAMkC,iBAAiB,GAAGlC,MAAM,CAACgC,QAAQ,KAAK9B,aAAa;MAC3D,MAAMiC,oBAAoB,GAAGnC,MAAM,CAACoC,WAAW,KAAKhC,gBAAgB;MACpEG,UAAU,CAAC2B,iBAAiB,IAAIC,oBAAoB,CAAC;IACvD;EACF,CAAC;;EAED;EACA,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,SAAS,GAAG;QAChBC,IAAI,EAAE3B,OAAO;QACboB,QAAQ,EAAElB,WAAW;QACrBsB,WAAW,EAAEpB,cAAc;QAC3BwB,QAAQ,EAAEtB;MACZ,CAAC;MACD,MAAM1B,KAAK,CAACiD,IAAI,CAAC,kCAAkC,EAAEH,SAAS,CAAC;MAC/DI,KAAK,CAAC,8BAA8B,CAAC;MACrC7B,UAAU,CAAC,EAAE,CAAC;MACdE,cAAc,CAAC,EAAE,CAAC;MAClBE,iBAAiB,CAAC,EAAE,CAAC;MACrBE,cAAc,CAAC,EAAE,CAAC;MAClBK,eAAe,CAAC,CAAC,CAAC,CAAE;IACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D;EACF,CAAC;;EAED;EACArC,SAAS,CAAC,MAAM;IACduC,0BAA0B,CAAC,CAAC,CAAC,CAAC;IAC9BN,eAAe,CAAC,CAAC,CAAC,CAAE;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE9B,OAAA;IAAKiD,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BlD,OAAA;MAAAkD,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAG3BtD,OAAA;MAAKiD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BlD,OAAA;QACEiD,SAAS,EAAE,cAAcrB,SAAS,KAAK,KAAK,GAAG,QAAQ,GAAG,EAAE,EAAG;QAC/D2B,OAAO,EAAEA,CAAA,KAAM1B,YAAY,CAAC,KAAK,CAAE;QAAAqB,QAAA,EACpC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtD,OAAA;QACEiD,SAAS,EAAE,cAAcrB,SAAS,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;QAChE2B,OAAO,EAAEA,CAAA,KAAM1B,YAAY,CAAC,MAAM,CAAE;QAAAqB,QAAA,EACrC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAGL1B,SAAS,KAAK,KAAK,iBAClB5B,OAAA,CAAAE,SAAA;MAAAgD,QAAA,gBAEElD,OAAA;QAAKiD,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BlD,OAAA;UAAAkD,QAAA,EAAG;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,EAC7BE,MAAM,CAACC,IAAI,CAACtD,UAAU,CAAC,CAACuD,GAAG,CAAEC,GAAG,iBAC/B3D,OAAA;UAEEiD,SAAS,EAAE,iBAAiBjC,cAAc,KAAK2C,GAAG,GAAG,UAAU,GAAG,EAAE,EAAG;UACvEJ,OAAO,EAAEA,CAAA,KAAM;YACbtC,iBAAiB,CAACD,cAAc,KAAK2C,GAAG,GAAG,EAAE,GAAGA,GAAG,CAAC;UACtD,CAAE;UAAAT,QAAA,EAEDS;QAAG,GANCA,GAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOF,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGNtD,OAAA;QAAQiD,SAAS,EAAC,mBAAmB;QAACM,OAAO,EAAEnB,0BAA2B;QAAAc,QAAA,EAAC;MAE3E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAGRxC,OAAO,iBAAId,OAAA;QAAAkD,QAAA,EAAG;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAC/B,CAACxC,OAAO,IAAIR,MAAM,iBACjBN,OAAA;QAAKiD,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BlD,OAAA;UAAGiD,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAAClD,OAAA;YAAAkD,QAAA,EAAQ;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAChD,MAAM,CAACuC,IAAI;QAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAGtEtD,OAAA;UAAAkD,QAAA,GAAO,mCAEL,eAAAlD,OAAA;YAAQ4D,KAAK,EAAEpD,aAAc;YAACqD,QAAQ,EAAGC,CAAC,IAAKrD,gBAAgB,CAACqD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAAAV,QAAA,gBAC9ElD,OAAA;cAAQ4D,KAAK,EAAC,EAAE;cAAAV,QAAA,EAAC;YAAqB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAC9CE,MAAM,CAACC,IAAI,CAACtD,UAAU,CAAC,CAACuD,GAAG,CAAEC,GAAG,iBAC/B3D,OAAA;cAAkB4D,KAAK,EAAED,GAAI;cAAAT,QAAA,EAAES;YAAG,GAArBA,GAAG;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA2B,CAC5C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACRtD,OAAA;UAAAmD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAGNtD,OAAA;UAAAkD,QAAA,GAAO,wCAEL,eAAAlD,OAAA;YACE4D,KAAK,EAAElD,gBAAiB;YACxBmD,QAAQ,EAAGC,CAAC,IAAKnD,mBAAmB,CAACmD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YACrDI,QAAQ,EAAE,CAACxD,aAAc,CAAC;YAAA;YAAA0C,QAAA,gBAE1BlD,OAAA;cAAQ4D,KAAK,EAAC,EAAE;cAAAV,QAAA,EAAC;YAA0B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACnD9C,aAAa,IACZL,UAAU,CAACK,aAAa,CAAC,CAACkD,GAAG,CAAEO,MAAM,iBACnCjE,OAAA;cAAqB4D,KAAK,EAAEK,MAAO;cAAAf,QAAA,EAAEe;YAAM,GAA9BA,MAAM;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAiC,CACrD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACRtD,OAAA;UAAAmD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAENtD,OAAA;UAAQiD,SAAS,EAAC,cAAc;UAACM,OAAO,EAAEhB,WAAY;UAAAW,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChF,CACN,EAGA1C,OAAO,KAAK,IAAI,iBACfZ,OAAA;QAAKiD,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrBlD,OAAA;UAAGiD,SAAS,EAAC,SAAS;UAAAC,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACvCtD,OAAA;UAAAkD,QAAA,gBAAGlD,OAAA;YAAAkD,QAAA,EAAQ;UAAmB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAChD,MAAM,CAACwC,QAAQ;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CACN,EACA1C,OAAO,KAAK,KAAK,iBAChBZ,OAAA;QAAKiD,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrBlD,OAAA;UAAGiD,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACzCtD,OAAA;UAAAkD,QAAA,gBAAGlD,OAAA;YAAAkD,QAAA,EAAQ;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAChD,MAAM,CAACgC,QAAQ;QAAA;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9DtD,OAAA;UAAAkD,QAAA,gBAAGlD,OAAA;YAAAkD,QAAA,EAAQ;UAAyB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAChD,MAAM,CAACoC,WAAW;QAAA;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtEtD,OAAA;UAAAkD,QAAA,gBAAGlD,OAAA;YAAAkD,QAAA,EAAQ;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAChD,MAAM,CAACwC,QAAQ;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CACN,eAGDtD,OAAA;QAAKiD,SAAS,EAAC,4BAA4B;QAAAC,QAAA,gBACzClD,OAAA;UAAAkD,QAAA,EAAI;QAA2B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpCtD,OAAA;UACEkE,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,oBAAoB;UAChCP,KAAK,EAAE1C,OAAQ;UACf2C,QAAQ,EAAGC,CAAC,IAAK3C,UAAU,CAAC2C,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,eACFtD,OAAA;UAAAmD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNtD,OAAA;UAAAkD,QAAA,GAAO,gBAEL,eAAAlD,OAAA;YAAQ4D,KAAK,EAAExC,WAAY;YAACyC,QAAQ,EAAGC,CAAC,IAAKzC,cAAc,CAACyC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAAAV,QAAA,gBAC1ElD,OAAA;cAAQ4D,KAAK,EAAC,EAAE;cAAAV,QAAA,EAAC;YAA0B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACnDE,MAAM,CAACC,IAAI,CAACtD,UAAU,CAAC,CAACuD,GAAG,CAAEC,GAAG,iBAC/B3D,OAAA;cAAkB4D,KAAK,EAAED,GAAI;cAAAT,QAAA,EAAES;YAAG,GAArBA,GAAG;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA2B,CAC5C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACRtD,OAAA;UAAAmD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNtD,OAAA;UAAAkD,QAAA,GAAO,qBAEL,eAAAlD,OAAA;YAAQ4D,KAAK,EAAEtC,cAAe;YAACuC,QAAQ,EAAGC,CAAC,IAAKvC,iBAAiB,CAACuC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAAAV,QAAA,gBAChFlD,OAAA;cAAQ4D,KAAK,EAAC,EAAE;cAAAV,QAAA,EAAC;YAA+B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACxDlC,WAAW,IACVjB,UAAU,CAACiB,WAAW,CAAC,CAACsC,GAAG,CAAEO,MAAM,iBACjCjE,OAAA;cAAqB4D,KAAK,EAAEK,MAAO;cAAAf,QAAA,EAAEe;YAAM,GAA9BA,MAAM;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAiC,CACrD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACRtD,OAAA;UAAAmD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNtD,OAAA;UAAAkD,QAAA,GAAO,YAEL,eAAAlD,OAAA;YACEkE,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC,qBAAqB;YACjCP,KAAK,EAAEpC,WAAY;YACnBqC,QAAQ,EAAGC,CAAC,IAAKrC,cAAc,CAACqC,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eACRtD,OAAA;UAAAmD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNtD,OAAA;UAAQiD,SAAS,EAAC,eAAe;UAACM,OAAO,EAAEZ,eAAgB;UAAAO,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnF,CAAC;IAAA,eACN,CACH,EAGA1B,SAAS,KAAK,MAAM,iBACnB5B,OAAA;MAAKiD,SAAS,EAAC,6BAA6B;MAAAC,QAAA,gBAC1ClD,OAAA;QAAAkD,QAAA,EAAI;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpCtD,OAAA;QAAOiD,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC7BlD,OAAA;UAAAkD,QAAA,eACElD,OAAA;YAAAkD,QAAA,gBACElD,OAAA;cAAAkD,QAAA,EAAI;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACftD,OAAA;cAAAkD,QAAA,EAAI;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClBtD,OAAA;cAAAkD,QAAA,EAAI;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvBtD,OAAA;cAAAkD,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRtD,OAAA;UAAAkD,QAAA,EACGxB,UAAU,CAACgC,GAAG,CAAC,CAACpD,MAAM,EAAE8D,KAAK,kBAC5BpE,OAAA;YAAAkD,QAAA,gBACElD,OAAA;cAAAkD,QAAA,EAAK5C,MAAM,CAACuC;YAAI;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtBtD,OAAA;cAAAkD,QAAA,EAAK5C,MAAM,CAACgC;YAAQ;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC1BtD,OAAA;cAAAkD,QAAA,EAAK5C,MAAM,CAACoC;YAAW;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC7BtD,OAAA;cAAAkD,QAAA,EAAK5C,MAAM,CAACwC;YAAQ;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAJnBc,KAAK;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACjD,EAAA,CArQQD,GAAG;AAAAiE,EAAA,GAAHjE,GAAG;AAuQZ,eAAeA,GAAG;AAAC,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}