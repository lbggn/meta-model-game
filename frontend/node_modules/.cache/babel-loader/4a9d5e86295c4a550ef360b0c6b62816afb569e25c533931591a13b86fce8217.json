{"ast":null,"code":"var _jsxFileName = \"/Users/lborgogn/Documents/git/meta-model-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Importer le fichier CSS\n\n// Liste des catégories et sous-catégories\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = {\n  \"Omission\": [\"Suppression simple\", \"Manque du comparatif\", \"Verbe non-spécifique\"],\n  \"Généralisation\": [\"Quantifieurs universels\", \"Origine perdue\", \"Opérateurs modaux\", \"Nominalisation\"],\n  \"Distorsion\": [\"Lecture de pensée\", \"Faux cause-effet\", \"Équivalence complexe\", \"Présupposé\"]\n};\nfunction App() {\n  _s();\n  // États pour la partie jeu\n  const [phrase, setPhrase] = useState(null);\n  const [categoryGuess, setCategoryGuess] = useState('');\n  const [subCategoryGuess, setSubCategoryGuess] = useState('');\n  const [correct, setCorrect] = useState(null); // true, false, or null\n  const [loading, setLoading] = useState(true);\n\n  // États pour le filtrage de la catégorie\n  const [filterCategory, setFilterCategory] = useState('');\n\n  // États pour soumettre une nouvelle phrase\n  const [newText, setNewText] = useState('');\n  const [newCategory, setNewCategory] = useState('');\n  const [newSubCategory, setNewSubCategory] = useState('');\n  const [newQuestion, setNewQuestion] = useState('');\n\n  // État pour stocker toutes les phrases récupérées depuis MongoDB\n  const [allPhrases, setAllPhrases] = useState([]);\n\n  // Charger toutes les phrases depuis MongoDB\n  const fetchAllPhrases = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/api/phrases');\n      setAllPhrases(response.data);\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération de toutes les phrases :\", error);\n    }\n  };\n\n  // Charger une phrase aléatoire ou filtrée pour la partie jeu\n  const fetchFilteredPhraseForGame = async () => {\n    try {\n      setLoading(true);\n      const params = {};\n      if (filterCategory) params.category = filterCategory;\n      const response = await axios.get('http://localhost:8000/api/phrase', {\n        params\n      });\n      setPhrase(response.data);\n      setLoading(false);\n      setCorrect(null); // Réinitialiser le feedback\n      setCategoryGuess('');\n      setSubCategoryGuess('');\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération de la phrase :\", error);\n      setLoading(false);\n    }\n  };\n\n  // Vérifier si la catégorie et sous-catégorie devinées sont correctes\n  const checkAnswer = () => {\n    if (phrase) {\n      const isCorrectCategory = phrase.category === categoryGuess;\n      const isCorrectSubCategory = phrase.subCategory === subCategoryGuess;\n      setCorrect(isCorrectCategory && isCorrectSubCategory);\n    }\n  };\n\n  // Soumettre une nouvelle phrase\n  const submitNewPhrase = async () => {\n    try {\n      const newPhrase = {\n        text: newText,\n        category: newCategory,\n        subCategory: newSubCategory,\n        question: newQuestion\n      };\n      await axios.post('http://localhost:8000/api/phrase', newPhrase);\n      alert('Phrase ajoutée avec succès !');\n      setNewText('');\n      setNewCategory('');\n      setNewSubCategory('');\n      setNewQuestion('');\n    } catch (error) {\n      console.error(\"Erreur lors de l'ajout de la phrase :\", error);\n    }\n  };\n\n  // Charger une nouvelle phrase au démarrage\n  useEffect(() => {\n    fetchFilteredPhraseForGame(); // Charger une phrase avec ou sans filtre\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Jeu du M\\xE9ta-mod\\xE8le\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Filtrer par cat\\xE9gorie :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), Object.keys(categories).map(cat => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `filter-button ${filterCategory === cat ? 'selected' : ''}`,\n        onClick: () => {\n          setFilterCategory(filterCategory === cat ? '' : cat);\n        },\n        children: cat\n      }, cat, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"new-phrase-button\",\n      onClick: fetchFilteredPhraseForGame,\n      children: \"Nouvelle phrase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }, this), !loading && phrase && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"phrase-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"phrase-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Phrase :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 38\n        }, this), \" \", phrase.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"S\\xE9lectionner la cat\\xE9gorie :\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: categoryGuess,\n          onChange: e => setCategoryGuess(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Choisir une cat\\xE9gorie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), Object.keys(categories).map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cat,\n            children: cat\n          }, cat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"S\\xE9lectionner la sous-cat\\xE9gorie :\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: subCategoryGuess,\n          onChange: e => setSubCategoryGuess(e.target.value),\n          disabled: !categoryGuess // Désactiver si la catégorie n'est pas sélectionnée\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Choisir une sous-cat\\xE9gorie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), categoryGuess && categories[categoryGuess].map(subCat => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: subCat,\n            children: subCat\n          }, subCat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"check-button\",\n        onClick: checkAnswer,\n        children: \"V\\xE9rifier la r\\xE9ponse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this), correct === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"correct\",\n        children: \"Correct ! \\uD83C\\uDF89\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Question associ\\xE9e :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 14\n        }, this), \" \", phrase.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), correct === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"incorrect\",\n        children: \"Incorrect \\uD83D\\uDE1E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"La bonne cat\\xE9gorie :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 14\n        }, this), \" \", phrase.category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"La bonne sous-cat\\xE9gorie :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 14\n        }, this), \" \", phrase.subCategory]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Question \\xE0 poser :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 14\n        }, this), \" \", phrase.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section new-phrase-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ajouter une nouvelle phrase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Texte de la phrase\",\n        value: newText,\n        onChange: e => setNewText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Cat\\xE9gorie :\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newCategory,\n          onChange: e => setNewCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"S\\xE9lectionner une cat\\xE9gorie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), Object.keys(categories).map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cat,\n            children: cat\n          }, cat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Sous-cat\\xE9gorie :\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newSubCategory,\n          onChange: e => setNewSubCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"S\\xE9lectionner une sous-cat\\xE9gorie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), newCategory && categories[newCategory].map(subCat => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: subCat,\n            children: subCat\n          }, subCat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Question :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Exemple de question\",\n          value: newQuestion,\n          onChange: e => setNewQuestion(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: submitNewPhrase,\n        children: \"Ajouter la phrase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section all-phrases-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Liste de toutes les phrases\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: allPhrases.map((phrase, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Phrase :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), \" \", phrase.text, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 55\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Cat\\xE9gorie :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), \" \", phrase.category, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 62\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Sous-cat\\xE9gorie :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), \" \", phrase.subCategory, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 70\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Question :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), \" \", phrase.question]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1pWANA9u/ymfN+eVfoJkbScoMkE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","categories","App","_s","phrase","setPhrase","categoryGuess","setCategoryGuess","subCategoryGuess","setSubCategoryGuess","correct","setCorrect","loading","setLoading","filterCategory","setFilterCategory","newText","setNewText","newCategory","setNewCategory","newSubCategory","setNewSubCategory","newQuestion","setNewQuestion","allPhrases","setAllPhrases","fetchAllPhrases","response","get","data","error","console","fetchFilteredPhraseForGame","params","category","checkAnswer","isCorrectCategory","isCorrectSubCategory","subCategory","submitNewPhrase","newPhrase","text","question","post","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","cat","onClick","value","onChange","e","target","disabled","subCat","type","placeholder","index","_c","$RefreshReg$"],"sources":["/Users/lborgogn/Documents/git/meta-model-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Importer le fichier CSS\n\n// Liste des catégories et sous-catégories\nconst categories = {\n  \"Omission\": [\n    \"Suppression simple\",\n    \"Manque du comparatif\",\n    \"Verbe non-spécifique\"\n  ],\n  \"Généralisation\": [\n    \"Quantifieurs universels\",\n    \"Origine perdue\",\n    \"Opérateurs modaux\",\n    \"Nominalisation\"\n  ],\n  \"Distorsion\": [\n    \"Lecture de pensée\",\n    \"Faux cause-effet\",\n    \"Équivalence complexe\",\n    \"Présupposé\"\n  ]\n};\n\nfunction App() {\n  // États pour la partie jeu\n  const [phrase, setPhrase] = useState(null);\n  const [categoryGuess, setCategoryGuess] = useState('');\n  const [subCategoryGuess, setSubCategoryGuess] = useState('');\n  const [correct, setCorrect] = useState(null); // true, false, or null\n  const [loading, setLoading] = useState(true);\n\n  // États pour le filtrage de la catégorie\n  const [filterCategory, setFilterCategory] = useState('');\n\n  // États pour soumettre une nouvelle phrase\n  const [newText, setNewText] = useState('');\n  const [newCategory, setNewCategory] = useState('');\n  const [newSubCategory, setNewSubCategory] = useState('');\n  const [newQuestion, setNewQuestion] = useState('');\n\n  // État pour stocker toutes les phrases récupérées depuis MongoDB\n  const [allPhrases, setAllPhrases] = useState([]);\n\n  // Charger toutes les phrases depuis MongoDB\n  const fetchAllPhrases = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/api/phrases');\n      setAllPhrases(response.data);\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération de toutes les phrases :\", error);\n    }\n  };\n\n  // Charger une phrase aléatoire ou filtrée pour la partie jeu\n  const fetchFilteredPhraseForGame = async () => {\n    try {\n      setLoading(true);\n      const params = {};\n      if (filterCategory) params.category = filterCategory;\n\n      const response = await axios.get('http://localhost:8000/api/phrase', { params });\n      setPhrase(response.data);\n      setLoading(false);\n      setCorrect(null); // Réinitialiser le feedback\n      setCategoryGuess('');\n      setSubCategoryGuess('');\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération de la phrase :\", error);\n      setLoading(false);\n    }\n  };\n\n  // Vérifier si la catégorie et sous-catégorie devinées sont correctes\n  const checkAnswer = () => {\n    if (phrase) {\n      const isCorrectCategory = phrase.category === categoryGuess;\n      const isCorrectSubCategory = phrase.subCategory === subCategoryGuess;\n      setCorrect(isCorrectCategory && isCorrectSubCategory);\n    }\n  };\n\n  // Soumettre une nouvelle phrase\n  const submitNewPhrase = async () => {\n    try {\n      const newPhrase = {\n        text: newText,\n        category: newCategory,\n        subCategory: newSubCategory,\n        question: newQuestion\n        \n      };\n      await axios.post('http://localhost:8000/api/phrase', newPhrase);\n      alert('Phrase ajoutée avec succès !');\n      setNewText('');\n      setNewCategory('');\n      setNewSubCategory('');\n      setNewQuestion('');\n    } catch (error) {\n      console.error(\"Erreur lors de l'ajout de la phrase :\", error);\n    }\n  };\n\n  // Charger une nouvelle phrase au démarrage\n  useEffect(() => {\n    fetchFilteredPhraseForGame(); // Charger une phrase avec ou sans filtre\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      <h1>Jeu du Méta-modèle</h1>\n\n      {/* Filtres pour le jeu */}\n      <div className=\"category-filters\">\n        <p>Filtrer par catégorie :</p>\n        {Object.keys(categories).map((cat) => (\n          <button\n            key={cat}\n            className={`filter-button ${filterCategory === cat ? 'selected' : ''}`}\n            onClick={() => {\n              setFilterCategory(filterCategory === cat ? '' : cat);\n            }}\n          >\n            {cat}\n          </button>\n        ))}\n      </div>\n\n      {/* Bouton pour charger une nouvelle phrase */}\n      <button className=\"new-phrase-button\" onClick={fetchFilteredPhraseForGame}>\n        Nouvelle phrase\n      </button>\n\n      {/* Chargement de la phrase à deviner */}\n      {loading && <p>Chargement...</p>}\n      {!loading && phrase && (\n        <div className=\"phrase-container\">\n          <p className=\"phrase-text\"><strong>Phrase :</strong> {phrase.text}</p>\n\n          {/* Sélection de la catégorie */}\n          <label>\n            Sélectionner la catégorie :\n            <select value={categoryGuess} onChange={(e) => setCategoryGuess(e.target.value)}>\n              <option value=\"\">Choisir une catégorie</option>\n              {Object.keys(categories).map((cat) => (\n                <option key={cat} value={cat}>{cat}</option>\n              ))}\n            </select>\n          </label>\n          <br />\n\n          {/* Sélection de la sous-catégorie */}\n          <label>\n            Sélectionner la sous-catégorie : \n            <select\n              value={subCategoryGuess}\n              onChange={(e) => setSubCategoryGuess(e.target.value)}\n              disabled={!categoryGuess} // Désactiver si la catégorie n'est pas sélectionnée\n            >\n              <option value=\"\">Choisir une sous-catégorie</option>\n              {categoryGuess &&\n                categories[categoryGuess].map((subCat) => (\n                  <option key={subCat} value={subCat}>{subCat}</option>\n                ))}\n            </select>\n          </label>\n          <br />\n\n          <button className=\"check-button\" onClick={checkAnswer}>Vérifier la réponse</button>\n        </div>\n      )}\n\n      {/* Affichage du résultat */}\n      {correct === true && (\n        <div className=\"result\">\n          <p className=\"correct\">Correct ! 🎉</p>\n          <p><strong>Question associée :</strong> {phrase.question}</p>\n        </div>\n      )}\n      {correct === false && (\n        <div className=\"result\">\n          <p className=\"incorrect\">Incorrect 😞</p>\n          <p><strong>La bonne catégorie :</strong> {phrase.category}</p>\n          <p><strong>La bonne sous-catégorie :</strong> {phrase.subCategory}</p>\n          <p><strong>Question à poser :</strong> {phrase.question}</p>\n        </div>\n      )}\n\n      {/* Section pour soumettre une nouvelle phrase */}\n      <div className=\"section new-phrase-section\">\n        <h2>Ajouter une nouvelle phrase</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Texte de la phrase\"\n          value={newText}\n          onChange={(e) => setNewText(e.target.value)}\n        />\n        <br />\n        <label>\n          Catégorie :\n          <select value={newCategory} onChange={(e) => setNewCategory(e.target.value)}>\n            <option value=\"\">Sélectionner une catégorie</option>\n            {Object.keys(categories).map((cat) => (\n              <option key={cat} value={cat}>{cat}</option>\n            ))}\n          </select>\n        </label>\n        <br />\n        <label>\n          Sous-catégorie :\n          <select value={newSubCategory} onChange={(e) => setNewSubCategory(e.target.value)}>\n            <option value=\"\">Sélectionner une sous-catégorie</option>\n            {newCategory &&\n              categories[newCategory].map((subCat) => (\n                <option key={subCat} value={subCat}>{subCat}</option>\n              ))}\n          </select>\n        </label>\n        <br />\n        <label>\n          Question :\n          <input\n            type=\"text\"\n            placeholder=\"Exemple de question\"\n            value={newQuestion}\n            onChange={(e) => setNewQuestion(e.target.value)}\n          />\n        </label>\n        <br />\n        <button className=\"submit-button\" onClick={submitNewPhrase}>Ajouter la phrase</button>\n      </div>\n\n      {/* Section pour afficher toutes les phrases */}\n      <div className=\"section all-phrases-section\">\n        <h2>Liste de toutes les phrases</h2>\n        <ul>\n          {allPhrases.map((phrase, index) => (\n            <li key={index}>\n              <strong>Phrase :</strong> {phrase.text} <br />\n              <strong>Catégorie :</strong> {phrase.category} <br />\n              <strong>Sous-catégorie :</strong> {phrase.subCategory} <br />\n              <strong>Question :</strong> {phrase.question}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW,CAAC,CAAC;;AAEpB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAG;EACjB,UAAU,EAAE,CACV,oBAAoB,EACpB,sBAAsB,EACtB,sBAAsB,CACvB;EACD,gBAAgB,EAAE,CAChB,yBAAyB,EACzB,gBAAgB,EAChB,mBAAmB,EACnB,gBAAgB,CACjB;EACD,YAAY,EAAE,CACZ,mBAAmB,EACnB,kBAAkB,EAClB,sBAAsB,EACtB,YAAY;AAEhB,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACwB,cAAc,EAAEC,iBAAiB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC0B,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAM,CAAC4B,UAAU,EAAEC,aAAa,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAM8B,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,GAAG,CAAC,mCAAmC,CAAC;MACrEH,aAAa,CAACE,QAAQ,CAACE,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wDAAwD,EAAEA,KAAK,CAAC;IAChF;EACF,CAAC;;EAED;EACA,MAAME,0BAA0B,GAAG,MAAAA,CAAA,KAAY;IAC7C,IAAI;MACFnB,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMoB,MAAM,GAAG,CAAC,CAAC;MACjB,IAAInB,cAAc,EAAEmB,MAAM,CAACC,QAAQ,GAAGpB,cAAc;MAEpD,MAAMa,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,GAAG,CAAC,kCAAkC,EAAE;QAAEK;MAAO,CAAC,CAAC;MAChF5B,SAAS,CAACsB,QAAQ,CAACE,IAAI,CAAC;MACxBhB,UAAU,CAAC,KAAK,CAAC;MACjBF,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;MAClBJ,gBAAgB,CAAC,EAAE,CAAC;MACpBE,mBAAmB,CAAC,EAAE,CAAC;IACzB,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACrEjB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMsB,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI/B,MAAM,EAAE;MACV,MAAMgC,iBAAiB,GAAGhC,MAAM,CAAC8B,QAAQ,KAAK5B,aAAa;MAC3D,MAAM+B,oBAAoB,GAAGjC,MAAM,CAACkC,WAAW,KAAK9B,gBAAgB;MACpEG,UAAU,CAACyB,iBAAiB,IAAIC,oBAAoB,CAAC;IACvD;EACF,CAAC;;EAED;EACA,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,SAAS,GAAG;QAChBC,IAAI,EAAEzB,OAAO;QACbkB,QAAQ,EAAEhB,WAAW;QACrBoB,WAAW,EAAElB,cAAc;QAC3BsB,QAAQ,EAAEpB;MAEZ,CAAC;MACD,MAAMxB,KAAK,CAAC6C,IAAI,CAAC,kCAAkC,EAAEH,SAAS,CAAC;MAC/DI,KAAK,CAAC,8BAA8B,CAAC;MACrC3B,UAAU,CAAC,EAAE,CAAC;MACdE,cAAc,CAAC,EAAE,CAAC;MAClBE,iBAAiB,CAAC,EAAE,CAAC;MACrBE,cAAc,CAAC,EAAE,CAAC;IACpB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D;EACF,CAAC;;EAED;EACAjC,SAAS,CAAC,MAAM;IACdmC,0BAA0B,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhC,OAAA;IAAK6C,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5B9C,OAAA;MAAA8C,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAG3BlD,OAAA;MAAK6C,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/B9C,OAAA;QAAA8C,QAAA,EAAG;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAC7BC,MAAM,CAACC,IAAI,CAACnD,UAAU,CAAC,CAACoD,GAAG,CAAEC,GAAG,iBAC/BtD,OAAA;QAEE6C,SAAS,EAAE,iBAAiB/B,cAAc,KAAKwC,GAAG,GAAG,UAAU,GAAG,EAAE,EAAG;QACvEC,OAAO,EAAEA,CAAA,KAAM;UACbxC,iBAAiB,CAACD,cAAc,KAAKwC,GAAG,GAAG,EAAE,GAAGA,GAAG,CAAC;QACtD,CAAE;QAAAR,QAAA,EAEDQ;MAAG,GANCA,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOF,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNlD,OAAA;MAAQ6C,SAAS,EAAC,mBAAmB;MAACU,OAAO,EAAEvB,0BAA2B;MAAAc,QAAA,EAAC;IAE3E;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAGRtC,OAAO,iBAAIZ,OAAA;MAAA8C,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC/B,CAACtC,OAAO,IAAIR,MAAM,iBACjBJ,OAAA;MAAK6C,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/B9C,OAAA;QAAG6C,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAAC9C,OAAA;UAAA8C,QAAA,EAAQ;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC9C,MAAM,CAACqC,IAAI;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAGtElD,OAAA;QAAA8C,QAAA,GAAO,mCAEL,eAAA9C,OAAA;UAAQwD,KAAK,EAAElD,aAAc;UAACmD,QAAQ,EAAGC,CAAC,IAAKnD,gBAAgB,CAACmD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAV,QAAA,gBAC9E9C,OAAA;YAAQwD,KAAK,EAAC,EAAE;YAAAV,QAAA,EAAC;UAAqB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAC9CC,MAAM,CAACC,IAAI,CAACnD,UAAU,CAAC,CAACoD,GAAG,CAAEC,GAAG,iBAC/BtD,OAAA;YAAkBwD,KAAK,EAAEF,GAAI;YAAAR,QAAA,EAAEQ;UAAG,GAArBA,GAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA2B,CAC5C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACRlD,OAAA;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAGNlD,OAAA;QAAA8C,QAAA,GAAO,wCAEL,eAAA9C,OAAA;UACEwD,KAAK,EAAEhD,gBAAiB;UACxBiD,QAAQ,EAAGC,CAAC,IAAKjD,mBAAmB,CAACiD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UACrDI,QAAQ,EAAE,CAACtD,aAAc,CAAC;UAAA;UAAAwC,QAAA,gBAE1B9C,OAAA;YAAQwD,KAAK,EAAC,EAAE;YAAAV,QAAA,EAAC;UAA0B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACnD5C,aAAa,IACZL,UAAU,CAACK,aAAa,CAAC,CAAC+C,GAAG,CAAEQ,MAAM,iBACnC7D,OAAA;YAAqBwD,KAAK,EAAEK,MAAO;YAAAf,QAAA,EAAEe;UAAM,GAA9BA,MAAM;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAiC,CACrD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACRlD,OAAA;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAENlD,OAAA;QAAQ6C,SAAS,EAAC,cAAc;QAACU,OAAO,EAAEpB,WAAY;QAAAW,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChF,CACN,EAGAxC,OAAO,KAAK,IAAI,iBACfV,OAAA;MAAK6C,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrB9C,OAAA;QAAG6C,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACvClD,OAAA;QAAA8C,QAAA,gBAAG9C,OAAA;UAAA8C,QAAA,EAAQ;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC9C,MAAM,CAACsC,QAAQ;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CACN,EACAxC,OAAO,KAAK,KAAK,iBAChBV,OAAA;MAAK6C,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrB9C,OAAA;QAAG6C,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACzClD,OAAA;QAAA8C,QAAA,gBAAG9C,OAAA;UAAA8C,QAAA,EAAQ;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC9C,MAAM,CAAC8B,QAAQ;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9DlD,OAAA;QAAA8C,QAAA,gBAAG9C,OAAA;UAAA8C,QAAA,EAAQ;QAAyB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC9C,MAAM,CAACkC,WAAW;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtElD,OAAA;QAAA8C,QAAA,gBAAG9C,OAAA;UAAA8C,QAAA,EAAQ;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC9C,MAAM,CAACsC,QAAQ;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CACN,eAGDlD,OAAA;MAAK6C,SAAS,EAAC,4BAA4B;MAAAC,QAAA,gBACzC9C,OAAA;QAAA8C,QAAA,EAAI;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpClD,OAAA;QACE8D,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,oBAAoB;QAChCP,KAAK,EAAExC,OAAQ;QACfyC,QAAQ,EAAGC,CAAC,IAAKzC,UAAU,CAACyC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACFlD,OAAA;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNlD,OAAA;QAAA8C,QAAA,GAAO,gBAEL,eAAA9C,OAAA;UAAQwD,KAAK,EAAEtC,WAAY;UAACuC,QAAQ,EAAGC,CAAC,IAAKvC,cAAc,CAACuC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAV,QAAA,gBAC1E9C,OAAA;YAAQwD,KAAK,EAAC,EAAE;YAAAV,QAAA,EAAC;UAA0B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACnDC,MAAM,CAACC,IAAI,CAACnD,UAAU,CAAC,CAACoD,GAAG,CAAEC,GAAG,iBAC/BtD,OAAA;YAAkBwD,KAAK,EAAEF,GAAI;YAAAR,QAAA,EAAEQ;UAAG,GAArBA,GAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA2B,CAC5C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACRlD,OAAA;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNlD,OAAA;QAAA8C,QAAA,GAAO,qBAEL,eAAA9C,OAAA;UAAQwD,KAAK,EAAEpC,cAAe;UAACqC,QAAQ,EAAGC,CAAC,IAAKrC,iBAAiB,CAACqC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAV,QAAA,gBAChF9C,OAAA;YAAQwD,KAAK,EAAC,EAAE;YAAAV,QAAA,EAAC;UAA+B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACxDhC,WAAW,IACVjB,UAAU,CAACiB,WAAW,CAAC,CAACmC,GAAG,CAAEQ,MAAM,iBACjC7D,OAAA;YAAqBwD,KAAK,EAAEK,MAAO;YAAAf,QAAA,EAAEe;UAAM,GAA9BA,MAAM;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAiC,CACrD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACRlD,OAAA;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNlD,OAAA;QAAA8C,QAAA,GAAO,YAEL,eAAA9C,OAAA;UACE8D,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,qBAAqB;UACjCP,KAAK,EAAElC,WAAY;UACnBmC,QAAQ,EAAGC,CAAC,IAAKnC,cAAc,CAACmC,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRlD,OAAA;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNlD,OAAA;QAAQ6C,SAAS,EAAC,eAAe;QAACU,OAAO,EAAEhB,eAAgB;QAAAO,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CAAC,eAGNlD,OAAA;MAAK6C,SAAS,EAAC,6BAA6B;MAAAC,QAAA,gBAC1C9C,OAAA;QAAA8C,QAAA,EAAI;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpClD,OAAA;QAAA8C,QAAA,EACGtB,UAAU,CAAC6B,GAAG,CAAC,CAACjD,MAAM,EAAE4D,KAAK,kBAC5BhE,OAAA;UAAA8C,QAAA,gBACE9C,OAAA;YAAA8C,QAAA,EAAQ;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAC9C,MAAM,CAACqC,IAAI,EAAC,GAAC,eAAAzC,OAAA;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9ClD,OAAA;YAAA8C,QAAA,EAAQ;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAC9C,MAAM,CAAC8B,QAAQ,EAAC,GAAC,eAAAlC,OAAA;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrDlD,OAAA;YAAA8C,QAAA,EAAQ;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAC9C,MAAM,CAACkC,WAAW,EAAC,GAAC,eAAAtC,OAAA;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC7DlD,OAAA;YAAA8C,QAAA,EAAQ;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAC9C,MAAM,CAACsC,QAAQ;QAAA,GAJrCsB,KAAK;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC/C,EAAA,CAhOQD,GAAG;AAAA+D,EAAA,GAAH/D,GAAG;AAkOZ,eAAeA,GAAG;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}