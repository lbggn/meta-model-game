{"ast":null,"code":"var _jsxFileName = \"/Users/lborgogn/Documents/git/meta-model-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Importer le fichier CSS\n\n// Liste des catégories (sans sous-catégories cette fois)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = [\"Omission\", \"Généralisation\", \"Distorsion\"];\nfunction App() {\n  _s();\n  // États pour la partie jeu\n  const [phrase, setPhrase] = useState(null);\n  const [categoryGuess, setCategoryGuess] = useState('');\n  const [correct, setCorrect] = useState(null); // true, false, or null\n  const [loading, setLoading] = useState(true);\n\n  // État pour le filtrage de la catégorie\n  const [filterCategory, setFilterCategory] = useState('');\n\n  // Charger une phrase aléatoire ou filtrée pour la partie jeu\n  const fetchFilteredPhraseForGame = async () => {\n    try {\n      setLoading(true);\n      const params = {};\n      if (filterCategory) params.category = filterCategory;\n      const response = await axios.get('http://localhost:8000/api/phrases', {\n        params\n      });\n      setPhrase(response.data);\n      setLoading(false);\n      setCorrect(null); // Réinitialiser le feedback\n      setCategoryGuess('');\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération de la phrase :\", error);\n      setLoading(false);\n    }\n  };\n\n  // Vérifier si la catégorie devinée est correcte\n  const checkAnswer = () => {\n    if (phrase) {\n      const isCorrectCategory = phrase.category === categoryGuess;\n      setCorrect(isCorrectCategory);\n    }\n  };\n\n  // Charger une nouvelle phrase au démarrage\n  useEffect(() => {\n    fetchFilteredPhraseForGame(); // Charger une phrase avec ou sans filtre\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Jeu et gestion des phrases - M\\xE9ta-mod\\xE8le\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Filtrer par cat\\xE9gorie :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `filter-button ${filterCategory === cat ? 'selected' : ''}`,\n        onClick: () => {\n          setFilterCategory(filterCategory === cat ? '' : cat);\n          fetchFilteredPhraseForGame();\n        },\n        children: cat\n      }, cat, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }, this), !loading && phrase && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"phrase-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"phrase-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Phrase :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 38\n        }, this), \" \", phrase.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"S\\xE9lectionner la cat\\xE9gorie :\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: categoryGuess,\n          onChange: e => setCategoryGuess(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Choisir une cat\\xE9gorie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cat,\n            children: cat\n          }, cat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"check-button\",\n        onClick: checkAnswer,\n        children: \"V\\xE9rifier la r\\xE9ponse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), correct === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"correct\",\n        children: \"Correct ! \\uD83C\\uDF89\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Question associ\\xE9e :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 14\n        }, this), \" \", phrase.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), correct === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"incorrect\",\n        children: \"Incorrect \\uD83D\\uDE1E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"La bonne cat\\xE9gorie :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 14\n        }, this), \" \", phrase.category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Question \\xE0 poser :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 14\n        }, this), \" \", phrase.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KqOce5UbxfrIoHHDZwieJXBSxrs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","categories","App","_s","phrase","setPhrase","categoryGuess","setCategoryGuess","correct","setCorrect","loading","setLoading","filterCategory","setFilterCategory","fetchFilteredPhraseForGame","params","category","response","get","data","error","console","checkAnswer","isCorrectCategory","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","cat","onClick","text","value","onChange","e","target","question","_c","$RefreshReg$"],"sources":["/Users/lborgogn/Documents/git/meta-model-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Importer le fichier CSS\n\n// Liste des catégories (sans sous-catégories cette fois)\nconst categories = [\n  \"Omission\",\n  \"Généralisation\",\n  \"Distorsion\"\n];\n\nfunction App() {\n  // États pour la partie jeu\n  const [phrase, setPhrase] = useState(null);\n  const [categoryGuess, setCategoryGuess] = useState('');\n  const [correct, setCorrect] = useState(null); // true, false, or null\n  const [loading, setLoading] = useState(true);\n\n  // État pour le filtrage de la catégorie\n  const [filterCategory, setFilterCategory] = useState('');\n\n  // Charger une phrase aléatoire ou filtrée pour la partie jeu\n  const fetchFilteredPhraseForGame = async () => {\n    try {\n      setLoading(true);\n      const params = {};\n      if (filterCategory) params.category = filterCategory;\n\n      const response = await axios.get('http://localhost:8000/api/phrases', { params });\n      setPhrase(response.data);\n      setLoading(false);\n      setCorrect(null); // Réinitialiser le feedback\n      setCategoryGuess('');\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération de la phrase :\", error);\n      setLoading(false);\n    }\n  };\n\n  // Vérifier si la catégorie devinée est correcte\n  const checkAnswer = () => {\n    if (phrase) {\n      const isCorrectCategory = phrase.category === categoryGuess;\n      setCorrect(isCorrectCategory);\n    }\n  };\n\n  // Charger une nouvelle phrase au démarrage\n  useEffect(() => {\n    fetchFilteredPhraseForGame(); // Charger une phrase avec ou sans filtre\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      <h1>Jeu et gestion des phrases - Méta-modèle</h1>\n\n      {/* Filtres pour le jeu - Utiliser des boutons */}\n      <div className=\"category-filters\">\n        <p>Filtrer par catégorie :</p>\n        {categories.map((cat) => (\n          <button\n            key={cat}\n            className={`filter-button ${filterCategory === cat ? 'selected' : ''}`}\n            onClick={() => {\n              setFilterCategory(filterCategory === cat ? '' : cat);\n              fetchFilteredPhraseForGame();\n            }}\n          >\n            {cat}\n          </button>\n        ))}\n      </div>\n\n      {/* Chargement de la phrase à deviner */}\n      {loading && <p>Chargement...</p>}\n      {!loading && phrase && (\n        <div className=\"phrase-container\">\n          <p className=\"phrase-text\"><strong>Phrase :</strong> {phrase.text}</p>\n\n          {/* Sélection de la catégorie */}\n          <label>\n            Sélectionner la catégorie :\n            <select value={categoryGuess} onChange={(e) => setCategoryGuess(e.target.value)}>\n              <option value=\"\">Choisir une catégorie</option>\n              {categories.map((cat) => (\n                <option key={cat} value={cat}>{cat}</option>\n              ))}\n            </select>\n          </label>\n\n          <button className=\"check-button\" onClick={checkAnswer}>Vérifier la réponse</button>\n        </div>\n      )}\n\n      {/* Affichage du résultat */}\n      {correct === true && (\n        <div className=\"result\">\n          <p className=\"correct\">Correct ! 🎉</p>\n          <p><strong>Question associée :</strong> {phrase.question}</p>\n        </div>\n      )}\n      {correct === false && (\n        <div className=\"result\">\n          <p className=\"incorrect\">Incorrect 😞</p>\n          <p><strong>La bonne catégorie :</strong> {phrase.category}</p>\n          <p><strong>Question à poser :</strong> {phrase.question}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}