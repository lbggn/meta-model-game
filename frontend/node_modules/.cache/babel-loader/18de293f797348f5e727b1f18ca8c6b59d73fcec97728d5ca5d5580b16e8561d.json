{"ast":null,"code":"var _jsxFileName = \"/Users/lborgogn/Documents/git/meta-model-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Importer le fichier CSS\n\n// Liste des catégories et sous-catégories\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = {\n  \"Généralisation\": [\"Modalité de nécessité\", \"Quantificateur universel\", \"Nominalisation\"],\n  \"Distorsion\": [\"Lecture de pensée\", \"Cause-effet\", \"Présupposés\"],\n  \"Omission\": [\"Comparatif non spécifié\", \"Verbe non spécifié\", \"Manque de référence\"]\n};\nfunction App() {\n  _s();\n  // États pour la phrase et la sélection\n  const [phrase, setPhrase] = useState(null);\n  const [categoryGuess, setCategoryGuess] = useState('');\n  const [subCategoryGuess, setSubCategoryGuess] = useState('');\n  const [correct, setCorrect] = useState(null); // true, false, or null\n  const [loading, setLoading] = useState(true);\n\n  // Charger une phrase aléatoire au démarrage\n  const fetchRandomPhrase = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('http://localhost:8000/api/phrases');\n      setPhrase(response.data);\n      setLoading(false);\n      setCorrect(null); // Réinitialiser le feedback\n      setCategoryGuess('');\n      setSubCategoryGuess('');\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération de la phrase :\", error);\n      setLoading(false);\n    }\n  };\n\n  // Vérifier si la catégorie et sous-catégorie devinées sont correctes\n  const checkAnswer = () => {\n    if (phrase) {\n      const isCorrectCategory = phrase.category === categoryGuess;\n      const isCorrectSubCategory = phrase.subCategory === subCategoryGuess;\n      if (isCorrectCategory && isCorrectSubCategory) {\n        setCorrect(true);\n      } else {\n        setCorrect(false);\n      }\n    }\n  };\n\n  // Charger une nouvelle phrase quand le composant est monté\n  useEffect(() => {\n    fetchRandomPhrase();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Jeu du m\\xE9ta-mod\\xE8le\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }, this), !loading && phrase && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"phrase-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Phrase :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 14\n        }, this), \" \", phrase.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"S\\xE9lectionner la cat\\xE9gorie :\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: categoryGuess,\n          onChange: e => setCategoryGuess(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Choisir une cat\\xE9gorie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), Object.keys(categories).map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cat,\n            children: cat\n          }, cat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"S\\xE9lectionner la sous-cat\\xE9gorie :\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: subCategoryGuess,\n          onChange: e => setSubCategoryGuess(e.target.value),\n          disabled: !categoryGuess // Désactiver si la catégorie n'est pas sélectionnée\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Choisir une sous-cat\\xE9gorie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), categoryGuess && categories[categoryGuess].map(subCat => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: subCat,\n            children: subCat\n          }, subCat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"check-button\",\n        onClick: checkAnswer,\n        children: \"V\\xE9rifier la r\\xE9ponse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), correct === true && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"correct\",\n      children: \"Correct ! \\uD83C\\uDF89\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 28\n    }, this), correct === false && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"incorrect\",\n      children: \"Incorrect \\uD83D\\uDE1E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"new-phrase-button\",\n      onClick: fetchRandomPhrase,\n      children: \"Nouvelle phrase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PDg05VwyRF3Z8q9xF4WbusmHcwE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","categories","App","_s","phrase","setPhrase","categoryGuess","setCategoryGuess","subCategoryGuess","setSubCategoryGuess","correct","setCorrect","loading","setLoading","fetchRandomPhrase","response","get","data","error","console","checkAnswer","isCorrectCategory","category","isCorrectSubCategory","subCategory","className","children","fileName","_jsxFileName","lineNumber","columnNumber","text","value","onChange","e","target","Object","keys","map","cat","disabled","subCat","onClick","_c","$RefreshReg$"],"sources":["/Users/lborgogn/Documents/git/meta-model-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Importer le fichier CSS\n\n// Liste des catégories et sous-catégories\nconst categories = {\n  \"Généralisation\": [\n    \"Modalité de nécessité\",\n    \"Quantificateur universel\",\n    \"Nominalisation\"\n  ],\n  \"Distorsion\": [\n    \"Lecture de pensée\",\n    \"Cause-effet\",\n    \"Présupposés\"\n  ],\n  \"Omission\": [\n    \"Comparatif non spécifié\",\n    \"Verbe non spécifié\",\n    \"Manque de référence\"\n  ]\n};\n\nfunction App() {\n  // États pour la phrase et la sélection\n  const [phrase, setPhrase] = useState(null);\n  const [categoryGuess, setCategoryGuess] = useState('');\n  const [subCategoryGuess, setSubCategoryGuess] = useState('');\n  const [correct, setCorrect] = useState(null); // true, false, or null\n  const [loading, setLoading] = useState(true);\n\n  // Charger une phrase aléatoire au démarrage\n  const fetchRandomPhrase = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('http://localhost:8000/api/phrases');\n      setPhrase(response.data);\n      setLoading(false);\n      setCorrect(null); // Réinitialiser le feedback\n      setCategoryGuess('');\n      setSubCategoryGuess('');\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération de la phrase :\", error);\n      setLoading(false);\n    }\n  };\n\n  // Vérifier si la catégorie et sous-catégorie devinées sont correctes\n  const checkAnswer = () => {\n    if (phrase) {\n      const isCorrectCategory = phrase.category === categoryGuess;\n      const isCorrectSubCategory = phrase.subCategory === subCategoryGuess;\n      if (isCorrectCategory && isCorrectSubCategory) {\n        setCorrect(true);\n      } else {\n        setCorrect(false);\n      }\n    }\n  };\n\n  // Charger une nouvelle phrase quand le composant est monté\n  useEffect(() => {\n    fetchRandomPhrase();\n  }, []);\n\n  return (\n    <div className=\"game-container\">\n      <h1>Jeu du méta-modèle</h1>\n\n      {loading && <p>Chargement...</p>}\n\n      {!loading && phrase && (\n        <div className=\"phrase-container\">\n          <p><strong>Phrase :</strong> {phrase.text}</p>\n\n          {/* Sélection de la catégorie */}\n          <label>\n            Sélectionner la catégorie :\n            <select value={categoryGuess} onChange={(e) => setCategoryGuess(e.target.value)}>\n              <option value=\"\">Choisir une catégorie</option>\n              {Object.keys(categories).map((cat) => (\n                <option key={cat} value={cat}>{cat}</option>\n              ))}\n            </select>\n          </label>\n\n          {/* Sélection de la sous-catégorie */}\n          <label>\n            Sélectionner la sous-catégorie :\n            <select\n              value={subCategoryGuess}\n              onChange={(e) => setSubCategoryGuess(e.target.value)}\n              disabled={!categoryGuess} // Désactiver si la catégorie n'est pas sélectionnée\n            >\n              <option value=\"\">Choisir une sous-catégorie</option>\n              {categoryGuess &&\n                categories[categoryGuess].map((subCat) => (\n                  <option key={subCat} value={subCat}>{subCat}</option>\n                ))}\n            </select>\n          </label>\n\n          <button className=\"check-button\" onClick={checkAnswer}>Vérifier la réponse</button>\n        </div>\n      )}\n\n      {/* Affichage du résultat */}\n      {correct === true && <p className=\"correct\">Correct ! 🎉</p>}\n      {correct === false && <p className=\"incorrect\">Incorrect 😞</p>}\n\n      <button className=\"new-phrase-button\" onClick={fetchRandomPhrase}>Nouvelle phrase</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}